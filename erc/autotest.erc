fn main() {
	test_arithmetic_u8();
	print_separator();
	test_arithmetic_u16();
	print_separator();
	test_arithmetic_u32();
	print_separator();
	test_arithmetic_u64();
	print_separator();

	test_arithmetic_i8();
	print_separator();
	test_arithmetic_i16();
	print_separator();
	test_arithmetic_i32();
	print_separator();
	test_arithmetic_i64();
	print_separator();
	
	test_string();
	print_separator();
	test_parameters();
}

fn print_separator()
{
	printf(&"######################\n");
}

fn test_arithmetic_u8()
{
	let message = &"test_arithmetic_u8(%d): %d \n";

	let a = 5ub;
	let b = 12ub;
	let x = a + b;
	printf(message, 1ud, x as u32);

	x = b - a;
	printf(message, 2ud, x as u32);

	x = a * b;
	printf(message, 3ud, x as u32);

	x = b / a;
	printf(message, 4ud, x as u32);
}

fn test_arithmetic_u16()
{
	let message = &"test_arithmetic_u16(%d): %d \n";

	let a = 5uw;
	let b = 12uw;
	let x = a + b;
	printf(message, 1ud, x as u32);

	x = b - a;
	printf(message, 2ud, x as u32);

	x = a * b;
	printf(message, 3ud, x as u32);

	x = b / a;
	printf(message, 4ud, x as u32);
}

fn test_arithmetic_u32()
{
	let message = &"test_arithmetic_u32(%d): %d \n";

	let a = 5ud;
	let b = 12ud;
	let x = a + b;
	printf(message, 1ud, x);

	x = b - a;
	printf(message, 2ud, x);

	x = a * b;
	printf(message, 3ud, x);

	x = b / a;
	printf(message, 4ud, x);
}

fn test_arithmetic_u64()
{
	let message = &"test_arithmetic_u64(%d): %lld \n";

	let a = 5u;
	let b = 12u;
	let x = a + b;
	printf(message, 1ud, x);

	x = b - a;
	printf(message, 2ud, x);

	x = a * b;
	printf(message, 3ud, x);

	x = b / a;
	printf(message, 4ud, x);
}

fn test_arithmetic_i8()
{
	let message = &"test_arithmetic_i8(%d): %i \n";

	let a = 5b;
	let b = -12b;
	let x = a + b;
	printf(message, 1ud, x as i32);

	x = b - a;
	printf(message, 2ud, x as i32);

	x = a * b;
	printf(message, 3ud, x as i32);

	x = b / a;
	printf(message, 4ud, x as i32);
}

fn test_arithmetic_i16()
{
	let message = &"test_arithmetic_i16(%d): %i \n";

	let a = 5w;
	let b = -12w;
	let x = a + b;
	printf(message, 1ud, x as i32);

	x = b - a;
	printf(message, 2ud, x as i32);

	x = a * b;
	printf(message, 3ud, x as i32);

	x = b / a;
	printf(message, 4ud, x as i32);
}

fn test_arithmetic_i32()
{
	let message = &"test_arithmetic_i32(%d): %i \n";

	let a = 5d;
	let b = -12d;
	let x = a + b;
	printf(message, 1ud, x);

	x = b - a;
	printf(message, 2ud, x);

	x = a * b;
	printf(message, 3ud, x);

	x = b / a;
	printf(message, 4ud, x);
}

fn test_arithmetic_i64()
{
	let message = &"test_arithmetic_i64(%d): %lli \n";

	let a = 5;
	let b = -12;
	let x = a + b;
	printf(message, 1ud, x);

	x = b - a;
	printf(message, 2ud, x);

	x = a * b;
	printf(message, 3ud, x);

	x = b / a;
	printf(message, 4ud, x);
}

fn test_string()
{
	let s = "Hello World!";
	
	let c = s[6];
	printf(&"test_string(1): %c\n", c);

	let l = #s;
	printf(&"test_string(2): %lld\n", l);

	let s2 = "abc" + "defg";
	l = #s2;
	printf(&"test_string(3): %lld\n", l);
}

fn test_parameters()
{
	test_param_1(1b, 2b, 3b, 4b, 5b, 6b, 7b, 8b);
	print_separator();
	test_param_2(1w, 2w, 3w, 4w, 5w, 6w, 7w, 8w);
	print_separator();
	test_param_4(1d, 2d, 3d, 4d, 5d, 6d, 7d, 8d);
	print_separator();
	test_param_8(1, 2, 3, 4, 5, 6, 7, 8);
	print_separator();
	test_param_16f(vec(1.0,8.0), vec(2.0,7.0), vec(3.0,6.0), vec(4.0,5.0), vec(5.0,4.0), vec(6.0,3.0), vec(7.0,2.0), vec(8.0,1.0));
}

fn test_param_1(a: i8, b: i8, c: i8, d: i8, e: i8, f: i8, g: i8, h: i8)
{
	let message = &"test_param_1(%d): %d\n";

	printf(message, 1ud, a as i32);
	printf(message, 2ud, b as i32);
	printf(message, 3ud, c as i32);
	printf(message, 4ud, d as i32);
	printf(message, 5ud, e as i32);
	printf(message, 6ud, f as i32);
	printf(message, 7ud, g as i32);
	printf(message, 8ud, h as i32);
}

fn test_param_2(a: i16, b: i16, c: i16, d: i16, e: i16, f: i16, g: i16, h: i16)
{
	let message = &"test_param_2(%d): %d\n";

	printf(message, 1ud, a as i32);
	printf(message, 2ud, b as i32);
	printf(message, 3ud, c as i32);
	printf(message, 4ud, d as i32);
	printf(message, 5ud, e as i32);
	printf(message, 6ud, f as i32);
	printf(message, 7ud, g as i32);
	printf(message, 8ud, h as i32);
}

fn test_param_4(a: i32, b: i32, c: i32, d: i32, e: i32, f: i32, g: i32, h: i32)
{
	let message = &"test_param_4(%d): %d\n";

	printf(message, 1ud, a);
	printf(message, 2ud, b);
	printf(message, 3ud, c);
	printf(message, 4ud, d);
	printf(message, 5ud, e);
	printf(message, 6ud, f);
	printf(message, 7ud, g);
	printf(message, 8ud, h);
}

fn test_param_8(a: i64, b: i64, c: i64, d: i64, e: i64, f: i64, g: i64, h: i64)
{
	let message = &"test_param_8(%d): %lld\n";

	printf(message, 1ud, a);
	printf(message, 2ud, b);
	printf(message, 3ud, c);
	printf(message, 4ud, d);
	printf(message, 5ud, e);
	printf(message, 6ud, f);
	printf(message, 7ud, g);
	printf(message, 8ud, h);
}

fn test_param_4f()
{
	//Test f32 parameters
}

fn test_param_8f()
{
	//Test f64 parameters
}

fn test_param_16f(a: vec2d, b: vec2d, c: vec2d, d: vec2d, e: vec2d, f: vec2d, g: vec2d, h: vec2d)
{
	let message = &"test_param_16(%d): %lf, %lf\n";

	printf(message, 1ud, a);
	printf(message, 2ud, b);
	printf(message, 3ud, c);
	printf(message, 4ud, d);
	printf(message, 5ud, e);
	printf(message, 6ud, f);
	printf(message, 7ud, g);
	printf(message, 8ud, h);
}

fn test_arrays()
{
}

fn test_casting()
{
}