
fn main() {
	pointers();
}

fn expressions() {
	//Testing single line comment
	
	/* Multi
	line
	comment */

	let a = 1 + 2;
	a = -(-3 * -6);
}

fn pointers() {
	let p = new u64;
	let p2 = new f32(10);

	let x = p[0];

	del p;
	del p2;
}

fn boolean(p1: bool) {
	let test = 5 >= 3;
	let g = 5;
	if 1 <= 2 {
		g = 2;
		let j = 1.0f;
	}
	else {
		g = 7;
	}
}

fn ext("GetLastError", "Kernel32.dll") last_error(): i64;

fn fn_calls() {
	let err_code = last_error();
	if err_code == 0 {
		ret;
	}
	let kx = 5 * (7 + 3);
	let x6 = vec(1.0, 2.0, 3.0, 4.0);
	let k2 = add(x6, x6) + add(x6, x6);
}

fn add (pa: vec4d, pb: vec4d): vec4d {
	ret pa + pb * pa;
}

fn types()
{
	let a = 5*6+7*8;
	 let b = 1.5f ;
	let c=b;
	let d = 1.2;
	let e = 0.5d;

	let k = e * d;
	k = k + 2.0;

	let x3 = vec(1.0f, 2.0f, 3.0f, 4.0f);
	let x4 = vec(1.0f, 2.0f, 3.0f, 4.0f, 1.0f, 2.0f, 3.0f, 4.0f);

	let x5 = vec2d(1.0, 2.0);
	let x6 = vec(1.0, 2.0, 3.0, 4.0);

	let y = x5 + x5;

	let abc = vec(1.0, d * 2.0, (2.0 * d) + 3.0, d / 4.0);

	let xyz = vec(d, e) + vec(e, d);
}
